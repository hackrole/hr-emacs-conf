#!/usr/bin/env python
#coding=utf-8

from pymongo.connection import MongoClient
from django.core.management.base import BaseCommand, CommandError
from business import models

HOST = "192.168.1.51"
PORT = 27017

class Command(BaseCommand):

    args = "none"
    help = "collect the crawler business message to the business model"

    def init(self):
        self.mongo_client = MongoClient(host=HOST, port=PORT)
        self.baidu_business_coll = self.mongo_client.crawler.shzl

    def get_total_count(self):
        return self.baidu_business_coll.count()

    def handle(self, *args, **options):
        total = self.get_total_count()
        limit = 1000
        for i in range(total/1000+1):
            offset = i * limit
            baidu_data = self.get_baidu_business_page(offset, limit)
            handle_baidu_data(baidu_data)

    def handle_baidu_data(self, data):
        for d in data:
            if not d.baidu_detail_info.tags:
                # 无tag商家处理
                business = models.Business()
                business.name = d['shmc']
                buiness.address = d['shdz']
                business.city_code = 0 # TODO: shanghai
                business.longitude = d['location']['lng']
                business.latitude = d['location']['lat']
                business.save()
            else:
                taglist = d['baidu_detail_info']['tag'].split(',')
                business = models.Business()
                business.tags = taglist # TODO: find the tag for tag or category
                business.name = d['shmc']
                buiness.address = d['shdz']
                business.city_code = 0 # TODO: shanghai
                business.longitude = d['location']['lng']
                business.latitude = d['location']['lat']
                business.save()


    def get_baidu_business_page(self, offset, limit=1000):
        result = self.baidu_business_coll.find({}, {}).order_by(
            'time', '_id').skip(offset).limit(limit)
        return result
